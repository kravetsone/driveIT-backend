generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://root:bestsecure@localhost:5432/driveit?schema=public"
}

model User {
  id Int @id @default(autoincrement())

  login    String @unique
  password String

  firstName String
  lastName  String

  role UserRole @default(USER)
}

enum UserRole {
  USER
  ADMIN
}

//GTFS

model Agency {
  id       String @id @unique
  name     String
  url      String
  timezone String
  lang     String
}

model Stop {
  id            String  @id @unique
  name          String
  lat           Float
  lon           Float
  locationType  Int
  parentStation String?
  platformCode  String?

  stopTimes StopTime[]
}

model Route {
  id        Int    @id @unique
  agencyId  String
  shortName String
  longName  String
  type      Int
  url       String

  trips Trip[]
}

model Calendar {
  id Int @id @default(autoincrement())

  serviceId String

  isMonday    Boolean
  isTuesday   Boolean
  isWednesday Boolean
  isThursday  Boolean
  isFriday    Boolean
  isSaturday  Boolean
  isSunday    Boolean

  startDate Int
  endDate   Int
}

model StopTime {
  id Int @id @default(autoincrement())

  trip   Trip @relation(fields: [tripId], references: [id], onDelete: Cascade)
  tripId Int

  arrivalTime   String
  departureTime String

  stop   Stop   @relation(fields: [stopId], references: [id], onDelete: Cascade)
  stopId String

  stopSequence Int
  stopHeadsign String
}

model Trip {
  id Int @id @default(autoincrement())

  route     Route  @relation(fields: [routeId], references: [id], onDelete: Cascade)
  routeId   Int
  serviceId String

  ships     Ship[]
  stopTimes StopTime[]
}

model Ship {
  id   Int    @id @unique
  name String

  trips Trip[]
}
